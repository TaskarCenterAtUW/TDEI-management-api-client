/**
 * TDEI Management API
 * Management API, describes admin & user activities in the TDEI system.
 *
 * OpenAPI spec version: v0.1
 * Contact: placeholder_support@transequity.cs.washington.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Response } from '../models';
import { Service } from '../models';
import { ServiceUpdate } from '../models';
/**
 * GTFSFlexServiceApi - axios parameter creator
 * @export
 */
export declare const GTFSFlexServiceApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a GTFS flex service in the TDEI system.Returns the id for the newly created flex service.
     * @summary Creates a GTFS flex service in the TDEI system
     * @param {Service} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createService: (body: Service, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Activates/Deactives the service.
     * @summary Activates/Deactives the service.
     * @param {string} orgId Owner organization id.
     * @param {string} serviceId Service Id of the service to be Activated/Deactivated.
     * @param {boolean} status Boolean flag to Activate/Deactivate service.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteService: (orgId: string, serviceId: string, status: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets the GTFS Flex services in the TDEI system .
     * @summary Gets the GTFS Flex services in the TDEI system
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_org_id] Owner organization id.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [page_no] Page number to fetch
     * @param {string} [page_size] Total records to fetch.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getService: (tdei_service_id?: string, searchText?: string, tdei_org_id?: string, bbox?: Array<number>, page_no?: string, page_size?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates a GTFS flex service in the TDEI system.
     * @summary Updates a GTFS flex service in the TDEI system
     * @param {ServiceUpdate} body
     * @param {string} orgId Owner organization id.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateService: (body: ServiceUpdate, orgId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * GTFSFlexServiceApi - functional programming interface
 * @export
 */
export declare const GTFSFlexServiceApiFp: (configuration?: Configuration) => {
    /**
     * Creates a GTFS flex service in the TDEI system.Returns the id for the newly created flex service.
     * @summary Creates a GTFS flex service in the TDEI system
     * @param {Service} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createService(body: Service, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Response>>>;
    /**
     * Activates/Deactives the service.
     * @summary Activates/Deactives the service.
     * @param {string} orgId Owner organization id.
     * @param {string} serviceId Service Id of the service to be Activated/Deactivated.
     * @param {boolean} status Boolean flag to Activate/Deactivate service.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteService(orgId: string, serviceId: string, status: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Gets the GTFS Flex services in the TDEI system .
     * @summary Gets the GTFS Flex services in the TDEI system
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_org_id] Owner organization id.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [page_no] Page number to fetch
     * @param {string} [page_size] Total records to fetch.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getService(tdei_service_id?: string, searchText?: string, tdei_org_id?: string, bbox?: Array<number>, page_no?: string, page_size?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<Service>>>>;
    /**
     * Updates a GTFS flex service in the TDEI system.
     * @summary Updates a GTFS flex service in the TDEI system
     * @param {ServiceUpdate} body
     * @param {string} orgId Owner organization id.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateService(body: ServiceUpdate, orgId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
};
/**
 * GTFSFlexServiceApi - factory interface
 * @export
 */
export declare const GTFSFlexServiceApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a GTFS flex service in the TDEI system.Returns the id for the newly created flex service.
     * @summary Creates a GTFS flex service in the TDEI system
     * @param {Service} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createService(body: Service, options?: AxiosRequestConfig): Promise<AxiosResponse<Response>>;
    /**
     * Activates/Deactives the service.
     * @summary Activates/Deactives the service.
     * @param {string} orgId Owner organization id.
     * @param {string} serviceId Service Id of the service to be Activated/Deactivated.
     * @param {boolean} status Boolean flag to Activate/Deactivate service.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteService(orgId: string, serviceId: string, status: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Gets the GTFS Flex services in the TDEI system .
     * @summary Gets the GTFS Flex services in the TDEI system
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_org_id] Owner organization id.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [page_no] Page number to fetch
     * @param {string} [page_size] Total records to fetch.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getService(tdei_service_id?: string, searchText?: string, tdei_org_id?: string, bbox?: Array<number>, page_no?: string, page_size?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<Service>>>;
    /**
     * Updates a GTFS flex service in the TDEI system.
     * @summary Updates a GTFS flex service in the TDEI system
     * @param {ServiceUpdate} body
     * @param {string} orgId Owner organization id.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateService(body: ServiceUpdate, orgId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
};
/**
 * GTFSFlexServiceApi - object-oriented interface
 * @export
 * @class GTFSFlexServiceApi
 * @extends {BaseAPI}
 */
export declare class GTFSFlexServiceApi extends BaseAPI {
    /**
     * Creates a GTFS flex service in the TDEI system.Returns the id for the newly created flex service.
     * @summary Creates a GTFS flex service in the TDEI system
     * @param {Service} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexServiceApi
     */
    createService(body: Service, options?: AxiosRequestConfig): Promise<AxiosResponse<Response>>;
    /**
     * Activates/Deactives the service.
     * @summary Activates/Deactives the service.
     * @param {string} orgId Owner organization id.
     * @param {string} serviceId Service Id of the service to be Activated/Deactivated.
     * @param {boolean} status Boolean flag to Activate/Deactivate service.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexServiceApi
     */
    deleteService(orgId: string, serviceId: string, status: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Gets the GTFS Flex services in the TDEI system .
     * @summary Gets the GTFS Flex services in the TDEI system
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_org_id] Owner organization id.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [page_no] Page number to fetch
     * @param {string} [page_size] Total records to fetch.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexServiceApi
     */
    getService(tdei_service_id?: string, searchText?: string, tdei_org_id?: string, bbox?: Array<number>, page_no?: string, page_size?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<Service>>>;
    /**
     * Updates a GTFS flex service in the TDEI system.
     * @summary Updates a GTFS flex service in the TDEI system
     * @param {ServiceUpdate} body
     * @param {string} orgId Owner organization id.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexServiceApi
     */
    updateService(body: ServiceUpdate, orgId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
}
